<div class="container">
  <div class="post-form row">
    <div class="heading col-xs-12 col-sm-12 col-md-8">BELONG ANYWHERE - Add New Achievement</div>
    <div class="post-form col-xs-12 col-sm-12 col-md-8">

      <%= form_for @post, html: { multipart: true, class: 'form'} do |f| %>
          <%= errors_for(@post) %>

          <div class="form-group">
            <%= f.label :title, "Title" %>
            <%= f.text_field :title, class: 'form-control' %>
          </div>
          <div class="form-group">
            <%= f.label :address, "Address or Location" %>
            <%= f.text_field :address, id: 'pac-input', class: 'form-control' %>
          </div>
          <div class="form-group">
            <%= f.label :desc, "Description" %>
            <%= f.text_area :desc, class: 'form-control', rows: '5' %>
          </div>

          <% if action_name == 'new' %>
              <div class="form-group">
                <%= f.label :photo, "Photo" %><br/>
                <%= f.file_field :photo, :multiple => true, name: "post_attachments[photo][]", class: 'form-control' %>
              </div>
          <% elsif action_name == 'edit' %>
              <% @post_attachments.each do |img| %>
                  <div class="field">
                    <%= f.label :photo, "Photo" %><br/>
                    <%= img.photo_url %><span> >> </span>
                    <%= link_to "Edit", edit_post_attachment_path(img) %>
                    <%= f.file_field :photo, :multiple => true, name: "post_attachments[photo][]", class: 'form-control' %>
                  </div>
              <% end %>
          <% else %>
              <div class="form-group">
                <%= f.label :photo, "Photo" %><br/>
                <%= f.file_field :photo, :multiple => true, name: "post_attachments[photo][]", class: 'form-control' %>
              </div>
          <% end %>

          <div class="form-group">
            <%= f.label :target, "Target Date" %><br/>
            <%= f.date_select :target, class: 'form-control' %>
          </div>

          <div class="actions">
            <%= f.submit "Add New Place", :class => 'btn btn-primary' %>
          </div>
      <% end %>

    </div>

    <div class="post-form-right col-xs-12 col-sm-12 col-md-4">
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elementum et ex elementum pretium. Nam commodo sapien eget rhoncus feugiat. Donec sed ultrices risus. Etiam lectus massa, facilisis iaculis imperdiet id, pretium ac orci. Quisque fermentum convallis mi, non rhoncus eros congue non. Mauris congue fringilla sem mollis elementum. Vestibulum nec sem id libero efficitur sollicitudin. Nunc tristique ac neque quis semper. Suspendisse potenti. Sed bibendum, lacus vel volutpat ullamcorper, tortor tortor laoreet erat, ac tempus dolor risus at turpis. Integer sit amet faucibus lorem, quis aliquam nibh.</p>
    </div>

  </div>
</div>

<div id="map"></div>

<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -33.8688, lng: 151.2195},
            zoom: 13
        });
        var input = /** @type {!HTMLInputElement} */(
                document.getElementById('pac-input'));
//
//        var types = document.getElementById('type-selector');
//        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
//        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
//        var infowindow = new google.maps.InfoWindow();
//        var marker = new google.maps.Marker({
//            map: map,
//            anchorPoint: new google.maps.Point(0, -29)
//        });

//        autocomplete.addListener('place_changed', function() {
//            infowindow.close();
//            marker.setVisible(false);
//            var place = autocomplete.getPlace();
//            if (!place.geometry) {
//                window.alert("Autocomplete's returned place contains no geometry");
//                return;
//            }
//
//            // If the place has a geometry, then present it on a map.
//            if (place.geometry.viewport) {
//                map.fitBounds(place.geometry.viewport);
//            } else {
//                map.setCenter(place.geometry.location);
//                map.setZoom(17);  // Why 17? Because it looks good.
//            }
//            marker.setIcon(/** @type {google.maps.Icon} */({
//                url: place.icon,
//                size: new google.maps.Size(71, 71),
//                origin: new google.maps.Point(0, 0),
//                anchor: new google.maps.Point(17, 34),
//                scaledSize: new google.maps.Size(35, 35)
//            }));
//            marker.setPosition(place.geometry.location);
//            marker.setVisible(true);
//
//            var address = '';
//            if (place.address_components) {
//                address = [
//                    (place.address_components[0] && place.address_components[0].short_name || ''),
//                    (place.address_components[1] && place.address_components[1].short_name || ''),
//                    (place.address_components[2] && place.address_components[2].short_name || '')
//                ].join(' ');
//            }
//
////            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
////            infowindow.open(map, marker);
//        });

    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBUVb_XQoafN8fe9FTsnzZsQuxlg9pegpo&libraries=places&callback=initMap"
        async defer></script>